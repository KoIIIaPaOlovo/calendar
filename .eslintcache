[{"D:\\jeni4ka\\NiX\\React\\React_calendar\\calendar\\src\\index.js":"1","D:\\jeni4ka\\NiX\\React\\React_calendar\\calendar\\src\\App.js":"2","D:\\jeni4ka\\NiX\\React\\React_calendar\\calendar\\src\\reportWebVitals.js":"3","D:\\jeni4ka\\NiX\\React\\React_calendar\\calendar\\src\\components\\MonthPicker.js":"4","D:\\jeni4ka\\NiX\\React\\React_calendar\\calendar\\src\\components\\Table.js":"5","D:\\jeni4ka\\NiX\\React\\React_calendar\\calendar\\src\\components\\Team.js":"6","D:\\jeni4ka\\NiX\\React\\React_calendar\\calendar\\src\\additions\\dayNames.js":"7","D:\\jeni4ka\\NiX\\React\\React_calendar\\calendar\\src\\components\\Footer.js":"8","D:\\jeni4ka\\NiX\\React\\React_calendar\\calendar\\src\\additions\\teams.js":"9"},{"size":518,"mtime":1610483839423,"results":"10","hashOfConfig":"11"},{"size":1085,"mtime":1610483839412,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1610212346523,"results":"13","hashOfConfig":"11"},{"size":986,"mtime":1610483839419,"results":"14","hashOfConfig":"11"},{"size":2184,"mtime":1610612953832,"results":"15","hashOfConfig":"11"},{"size":7612,"mtime":1610612476785,"results":"16","hashOfConfig":"11"},{"size":104,"mtime":1610483839416,"results":"17","hashOfConfig":"11"},{"size":4222,"mtime":1610612138220,"results":"18","hashOfConfig":"11"},{"size":1252,"mtime":1610483839418,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"rp4a8e",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\jeni4ka\\NiX\\React\\React_calendar\\calendar\\src\\index.js",[],["40","41"],"D:\\jeni4ka\\NiX\\React\\React_calendar\\calendar\\src\\App.js",[],"D:\\jeni4ka\\NiX\\React\\React_calendar\\calendar\\src\\reportWebVitals.js",[],"D:\\jeni4ka\\NiX\\React\\React_calendar\\calendar\\src\\components\\MonthPicker.js",[],"D:\\jeni4ka\\NiX\\React\\React_calendar\\calendar\\src\\components\\Table.js",[],"D:\\jeni4ka\\NiX\\React\\React_calendar\\calendar\\src\\components\\Team.js",[],"D:\\jeni4ka\\NiX\\React\\React_calendar\\calendar\\src\\additions\\dayNames.js",[],"D:\\jeni4ka\\NiX\\React\\React_calendar\\calendar\\src\\components\\Footer.js",["42","43"],"import React from \"react\";\r\nimport dayNames from \"../additions/dayNames\";\r\nimport Team from \"./Team\";\r\nimport teams from \"../additions/teams\";\r\n\r\nclass Footer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let days = this.props.days;\r\n    let vacations = this.generateVacationsArray(\r\n      this.props.teams.participants,\r\n      this.props.currentDate,\r\n    );\r\n    this.state = {\r\n      days: days,\r\n      vacations: vacations,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      prevProps.days !== this.props.days ||\r\n      prevProps.teams.participants !== this.props.teams.participants ||\r\n      prevProps.currentDate !== this.props.currentDate\r\n    ) {\r\n      let days = this.props.days;\r\n      let vacations = this.generateVacationsArray(\r\n        this.props.teams.participants,\r\n        this.props.currentDate,\r\n      );\r\n      this.setState({\r\n        days: days,\r\n        vacations: vacations,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <tfoot>\r\n        <tr>\r\n          <td className=\"tfoot\">Day-person-starts </td>\r\n          {this.outputDays()}\r\n          <td></td>\r\n        </tr>\r\n      </tfoot>\r\n    );\r\n  }\r\n  outputDays() {\r\n    let arrayOfElements = [];\r\n    for (let index = 1; index <= this.props.days; index++) {\r\n      let dayName =\r\n        dayNames[\r\n          new Date(\r\n            this.props.currentDate.getFullYear(),\r\n            this.props.currentDate.getMonth(),\r\n            index,\r\n          ).getDay()\r\n        ];\r\n      if (dayName === \"Вс\" || dayName === \"Сб\") {\r\n        arrayOfElements.push(<td key={index} className=\"weekend\"></td>);\r\n      } else {\r\n        arrayOfElements.push(\r\n          <td key={index}>\r\n            {this.countMembersSum(index, this.props.currentDate)}\r\n          </td>,\r\n        );\r\n      }\r\n    }\r\n    return arrayOfElements;\r\n  }\r\n  generateVacationsArray(index, currentDate) {\r\n    let tempVacations = [];\r\n    this.props.teams.forEach((member) => {\r\n      member.participants.forEach((participant) => {\r\n        participant.vacations.forEach((member) => {\r\n          let endDate = this.sliceDate(member.duration, currentDate, \"end\");\r\n          let startDate = this.sliceDate(member.duration, currentDate, \"start\");\r\n          if (Date.parse(endDate) <= Date.parse(startDate)) {\r\n            return;\r\n          }\r\n          tempVacations.push({\r\n            startDate: startDate,\r\n            endDate: endDate,\r\n          });\r\n        });\r\n      });\r\n    });\r\n    return tempVacations;\r\n  }\r\n  countMembersSum(index, currentDate) {\r\n    let sumDays = 0;\r\n    this.state.vacations.forEach((item) => {\r\n      let startDateNumber = this.countDateNumber(item.startDate);\r\n      let endDateNumber = this.countDateNumber(item.endDate);\r\n      let currentDay = this.getDayFromNumber(currentDate, index);\r\n      if (currentDay >= startDateNumber && currentDay <= endDateNumber) {\r\n        sumDays++;\r\n      }\r\n    });\r\n    return sumDays;\r\n  }\r\n\r\n  sliceDate(duration, currentDate, position) {\r\n    let date = position === \"end\" ? duration.slice(13) : duration.slice(0, 10);\r\n    let dateNumber = Date.parse(this.countDateFromString(date));\r\n\r\n    if (\r\n      dateNumber < Date.parse(this.getFirstDay(currentDate)) &&\r\n      position === \"start\"\r\n    ) {\r\n      return this.getFirstDay(currentDate);\r\n    }\r\n    if (dateNumber > this.getLastDay(currentDate) && position === \"end\") {\r\n      return this.getLastDay(currentDate);\r\n    }\r\n    return this.countDateFromString(date);\r\n  }\r\n  countDateFromString(dateString) {\r\n    return new Date(\r\n      dateString.slice(6, 10),\r\n      +dateString.slice(3, 5) - 1,\r\n      dateString.slice(0, 2),\r\n    );\r\n  }\r\n  getLastDay(currentDate) {\r\n    return new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);\r\n  }\r\n  getFirstDay(currentDate) {\r\n    return new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\r\n  }\r\n  countDateNumber(date) {\r\n    return Date.parse(\r\n      new Date(date.getFullYear(), date.getMonth(), date.getDate()),\r\n    );\r\n  }\r\n  getDayFromNumber(currentDate, dayNumber) {\r\n    return new Date(\r\n      currentDate.getFullYear(),\r\n      currentDate.getMonth(),\r\n      dayNumber,\r\n    );\r\n  }\r\n}\r\nexport default Footer;\r\n","D:\\jeni4ka\\NiX\\React\\React_calendar\\calendar\\src\\additions\\teams.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":3,"column":8,"nodeType":"50","messageId":"51","endLine":3,"endColumn":12},{"ruleId":"48","severity":1,"message":"52","line":4,"column":8,"nodeType":"50","messageId":"51","endLine":4,"endColumn":13},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'Team' is defined but never used.","Identifier","unusedVar","'teams' is defined but never used.","no-global-assign","no-unsafe-negation"]